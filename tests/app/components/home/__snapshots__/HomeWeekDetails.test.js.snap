// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`does not include previous week payments 1`] = `
<View>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderBottomColor": "#222222",
        "borderBottomWidth": 0.5,
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 0.5,
          "flexDirection": "column",
          "height": 100,
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "black",
            "fontSize": 32,
          }
        }
      >
        $250.00
      </Text>
      <Text>
        Remaining this week
      </Text>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 0.5,
          "flexDirection": "column",
          "height": 100,
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "black",
            "fontSize": 32,
          }
        }
      >
        $0.00
      </Text>
      <Text>
        Spent so far
      </Text>
    </View>
  </View>
  <RCTScrollView
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View />
  </RCTScrollView>
</View>
`;

exports[`renders correctly 1`] = `
<View>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderBottomColor": "#222222",
        "borderBottomWidth": 0.5,
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 0.5,
          "flexDirection": "column",
          "height": 100,
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "black",
            "fontSize": 32,
          }
        }
      >
        $249.99
      </Text>
      <Text>
        Remaining this week
      </Text>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 0.5,
          "flexDirection": "column",
          "height": 100,
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "black",
            "fontSize": 32,
          }
        }
      >
        $0.01
      </Text>
      <Text>
        Spent so far
      </Text>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "date": 2018-04-08T04:00:00.000Z,
          "displayName": "Test payment",
          "paymentId": 1,
          "total": 1,
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderBottomColor": "#222222",
                "borderBottomWidth": 0.5,
                "flexDirection": "row",
                "height": 60,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "flex": 0.15,
                  "paddingHorizontal": 20,
                }
              }
            >
              <Text
                style={
                  Object {
                    "fontSize": 16,
                  }
                }
              >
                4/8
              </Text>
            </View>
            <View
              style={
                Object {
                  "flex": 0.6,
                }
              }
            >
              <Text
                numberOfLines={2}
                style={
                  Object {
                    "fontSize": 16,
                  }
                }
              >
                Test payment
              </Text>
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-end",
                  "flex": 0.25,
                  "paddingRight": 20,
                }
              }
            >
              <Text
                style={
                  Object {
                    "fontSize": 16,
                  }
                }
              >
                $0.01
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
